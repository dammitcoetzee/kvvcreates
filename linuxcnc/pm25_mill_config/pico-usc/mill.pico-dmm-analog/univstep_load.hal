# sample file pulls all load commands into a single file
# when emc2 starts it loads iocontrol

# kinematics
loadrt trivkins
# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES

# install driver
loadrt hal_ppmc port_addr="0xe010" extradac=0x00 epp_dir=1

loadrt and2        names=and2.estop,and2.vc,and2.a1,and2.a2,and2.a3,and2.a4,and2.motion_lock
loadrt or2         names=or2.0,or2.coolant,or2.o1,or2.stop0,or2.stop,or2.fault
loadrt not         names=not.spindle
loadrt mult2       count=1
loadrt estop_latch names=estop-latch.0,estop-latch.fault
loadrt scale       names=scale.0,scale.1,scale.2,scale.x-vel,scale.y-vel,scale.z-vel
loadrt lowpass     count=1
loadrt near        count=1
loadrt limit1      count=1
#loadrt encoder     num_chan=1
loadrt lincurve    count=1 personality=11
loadrt pid         num_chan=3
loadrt oneshot     names=oneshot.fault
loadrt limit3      names=limit3.spindle
loadrt abs         names=abs.spindle
loadrt angpos count=1
loadrt stepfilter names=stepfilter.spindle

# Components are executed in their addf order, and some may be order sensitive.

# set up the realtime thread
# read inputs first
addf ppmc.0.read              servo-thread
# then run the motion controller
addf motion-command-handler   servo-thread
addf and2.estop               servo-thread
addf not.spindle              servo-thread
addf or2.0                    servo-thread
addf or2.coolant              servo-thread
addf or2.stop0                servo-thread
addf or2.stop                 servo-thread
addf or2.fault                servo-thread
addf mult2.0                  servo-thread
addf estop-latch.0            servo-thread
addf estop-latch.fault        servo-thread
addf oneshot.fault            servo-thread
addf scale.0                  servo-thread
addf scale.1                  servo-thread
addf scale.2                  servo-thread
addf scale.x-vel              servo-thread
addf scale.y-vel              servo-thread
addf scale.z-vel              servo-thread
addf lowpass.0                servo-thread
addf near.0                   servo-thread
addf limit1.0                 servo-thread
addf limit3.spindle           servo-thread
addf abs.spindle              servo-thread
#addf encoder.update-counters  base-thread
#addf encoder.capture-position servo-thread
addf angpos.0 servo-thread
addf stepfilter.spindle servo-thread
addf lincurve.0               servo-thread
addf motion-controller        servo-thread
# then the PID loops
addf pid.0.do-pid-calcs       servo-thread
addf pid.1.do-pid-calcs       servo-thread
addf pid.2.do-pid-calcs       servo-thread
#addf pid.3.do-pid-calcs       servo-thread
# write outputs last
addf ppmc.0.write             servo-thread

loadrt toggle count=1
loadrt toggle2nist count=1

addf and2.vc                  servo-thread
addf and2.a1                  servo-thread
addf and2.a2                  servo-thread
addf and2.a3                  servo-thread
addf and2.a4                  servo-thread
addf or2.o1                   servo-thread
addf toggle.0                 servo-thread
addf toggle2nist.0            servo-thread
addf and2.motion_lock         servo-thread

loadrt debounce cfg=1,1
addf debounce.0 servo-thread
addf debounce.1 servo-thread

#setp encoder.0.counter-mode       true
#setp encoder.0.position-scale     1.0
#setp encoder.0.min-speed-estimate 0.5


loadusr -W datalogger
net datalogger-enabled datalogger.enabled
#net datalogger-xpos datalogger.xpos
#net datalogger-ypos datalogger.ypos
#net datalogger-zpos datalogger.zpos
#net datalogger-xvel x-velocity-upm datalogger.xvel
#net datalogger-yvel y-velocity-upm datalogger.yvel
#net datalogger-zvel z-velocity-upm datalogger.zvel
#net datalogger-spindle-speed-commanded spindle-cmd-rpm-abs datalogger.spindle-speed-commanded
#net datalogger-spindle-speed-actual spindle-rps datalogger.spindle-speed-actual


loadusr -W hal_manualtoolchange
net tool-change           iocontrol.0.tool-change      => hal_manualtoolchange.change
net tool-changed          hal_manualtoolchange.changed => iocontrol.0.tool-changed
net tool-number           iocontrol.0.tool-prep-number => hal_manualtoolchange.number
net tool-prepare-loopback iocontrol.0.tool-prepare     => iocontrol.0.tool-prepared

